[{"D:\\Code\\mern-instagram\\frontend\\src\\index.js":"1","D:\\Code\\mern-instagram\\frontend\\src\\components\\Posts.js":"2","D:\\Code\\mern-instagram\\frontend\\src\\components\\SuggestItem.js":"3","D:\\Code\\mern-instagram\\frontend\\src\\components\\Header.js":"4","D:\\Code\\mern-instagram\\frontend\\src\\components\\Post.js":"5","D:\\Code\\mern-instagram\\frontend\\src\\constants\\postConstants.js":"6","D:\\Code\\mern-instagram\\frontend\\src\\constants\\userConstants.js":"7","D:\\Code\\mern-instagram\\frontend\\src\\reducers\\postReducers.js":"8","D:\\Code\\mern-instagram\\frontend\\src\\reducers\\userReducers.js":"9","D:\\Code\\mern-instagram\\frontend\\src\\store.js":"10","D:\\Code\\mern-instagram\\frontend\\src\\App.js":"11","D:\\Code\\mern-instagram\\frontend\\src\\actions\\postActions.js":"12","D:\\Code\\mern-instagram\\frontend\\src\\components\\Profile.js":"13","D:\\Code\\mern-instagram\\frontend\\src\\screens\\Home.js":"14","D:\\Code\\mern-instagram\\frontend\\src\\screens\\Register.js":"15","D:\\Code\\mern-instagram\\frontend\\src\\screens\\Login.js":"16","D:\\Code\\mern-instagram\\frontend\\src\\actions\\userActions.js":"17","D:\\Code\\mern-instagram\\frontend\\src\\screens\\ManageProfile.js":"18","D:\\Code\\mern-instagram\\frontend\\src\\screens\\PostForm.js":"19"},{"size":286,"mtime":1606897239263,"results":"20","hashOfConfig":"21"},{"size":1258,"mtime":1607008114137,"results":"22","hashOfConfig":"21"},{"size":583,"mtime":1606842659009,"results":"23","hashOfConfig":"21"},{"size":4501,"mtime":1606987254415,"results":"24","hashOfConfig":"21"},{"size":7045,"mtime":1607015491968,"results":"25","hashOfConfig":"21"},{"size":851,"mtime":1606908813683,"results":"26","hashOfConfig":"21"},{"size":793,"mtime":1606896578651,"results":"27","hashOfConfig":"21"},{"size":2388,"mtime":1607014036577,"results":"28","hashOfConfig":"21"},{"size":2112,"mtime":1607015004108,"results":"29","hashOfConfig":"21"},{"size":1184,"mtime":1606989917159,"results":"30","hashOfConfig":"21"},{"size":751,"mtime":1606996289922,"results":"31","hashOfConfig":"21"},{"size":4406,"mtime":1607010755324,"results":"32","hashOfConfig":"21"},{"size":1728,"mtime":1606990979771,"results":"33","hashOfConfig":"21"},{"size":676,"mtime":1606995686108,"results":"34","hashOfConfig":"21"},{"size":2357,"mtime":1607009022578,"results":"35","hashOfConfig":"21"},{"size":1809,"mtime":1606991227280,"results":"36","hashOfConfig":"21"},{"size":3831,"mtime":1606983452996,"results":"37","hashOfConfig":"21"},{"size":2837,"mtime":1606993933355,"results":"38","hashOfConfig":"21"},{"size":2099,"mtime":1607005347769,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9uu15",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"D:\\Code\\mern-instagram\\frontend\\src\\index.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\components\\Posts.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\components\\SuggestItem.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\components\\Header.js",["81"],"D:\\Code\\mern-instagram\\frontend\\src\\components\\Post.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\constants\\postConstants.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\constants\\userConstants.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\reducers\\postReducers.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\store.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\App.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\actions\\postActions.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\components\\Profile.js",["82","83"],"D:\\Code\\mern-instagram\\frontend\\src\\screens\\Home.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\screens\\Register.js",["84"],"import React, { useEffect, useState } from 'react';\r\nimport logo from '../images/ig-logo.png';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst Register = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  const { loading, error } = useSelector((state) => state.userRegister);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { success } = useSelector((state) => state.userRegister);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(register(email, password, name, username));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.id) {\r\n      history.push('/');\r\n    }\r\n    if (success) {\r\n      setTimeout(() => {\r\n        history.push('/');\r\n      }, 1000);\r\n    }\r\n  }, [history, userInfo, success]);\r\n\r\n  return (\r\n    <>\r\n      <div className='form-container'>\r\n        <div className='form-header'>\r\n          <img src={logo} alt='logo' />\r\n        </div>\r\n        <form onSubmit={handleSubmit} className='register-form'>\r\n          <input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder='Your email'\r\n            type='email'\r\n          />\r\n          <input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder='Password'\r\n            type='password'\r\n          />\r\n          <input\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder='Name'\r\n            type='text'\r\n          />\r\n          <input\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder='Username'\r\n            type='text'\r\n          />\r\n          <div>\r\n            <button type='submit' className='form-button'>\r\n              {loading ? 'Loading...' : 'Register'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div className='form-container'>\r\n        <p clas>\r\n          Have an account?{' '}\r\n          <a href='/login' className='blue-text bold-text'>\r\n            Login\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\Code\\mern-instagram\\frontend\\src\\screens\\Login.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\actions\\userActions.js",[],"D:\\Code\\mern-instagram\\frontend\\src\\screens\\ManageProfile.js",["85","86","87"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserProfile, updateUserProfile } from '../actions/userActions';\r\nimport avatarHolder from '../images/avatar.jpg';\r\n\r\nconst ManageProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.userProfile);\r\n  const { loading, error, success } = useSelector(\r\n    (state) => state.userUpdateProfile\r\n  );\r\n\r\n  const [imgHolder, setImgHolder] = useState(avatarHolder);\r\n  const [profileData, setProfileData] = useState({\r\n    email: '',\r\n    name: '',\r\n    username: '',\r\n    avatar: '',\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateUserProfile(profileData));\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const selected = e.target.files[0];\r\n    setProfileData({ ...profileData, avatar: selected });\r\n\r\n    if (selected) {\r\n      let reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImgHolder(reader.result);\r\n      };\r\n      reader.readAsDataURL(selected);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserProfile());\r\n\r\n    setProfileData(user);\r\n    setImgHolder(user.avatar);\r\n  }, [dispatch, user.name]);\r\n\r\n  return (\r\n    <>\r\n      <div className='form-container'>\r\n        <div className='form-header'>\r\n          <h1 style={{ marginBottom: '2rem', lineHeight: '2rem' }}>\r\n            Your Profile\r\n          </h1>\r\n        </div>\r\n        <form onSubmit={handleSubmit} className='register-form'>\r\n          <div className='avatar-input'>\r\n            <img src={imgHolder} className='avatar-holder' />\r\n            <input onChange={handleInput} type='file' placeholder='Avatar' />\r\n          </div>\r\n\r\n          <h4 className='label'>Email:</h4>\r\n          <input\r\n            value={profileData.email}\r\n            onChange={(e) =>\r\n              setProfileData({ ...profileData, email: e.target.value })\r\n            }\r\n            type='email'\r\n          />\r\n\r\n          <h4 className='label'>Username:</h4>\r\n          <input\r\n            value={profileData.username}\r\n            onChange={(e) =>\r\n              setProfileData({ ...profileData, username: e.target.value })\r\n            }\r\n            type='text'\r\n          />\r\n\r\n          <h4 className='label'>Name:</h4>\r\n          <input\r\n            value={profileData.name}\r\n            onChange={(e) =>\r\n              setProfileData({ ...profileData, name: e.target.value })\r\n            }\r\n            type='text'\r\n          />\r\n\r\n          <div>\r\n            <button type='submit' className='form-button'>\r\n              {loading ? 'Updating...' : 'Update'}\r\n            </button>\r\n            {success && <p>Update success!</p>}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageProfile;\r\n","D:\\Code\\mern-instagram\\frontend\\src\\screens\\PostForm.js",["88","89"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createPost } from '../actions/postActions';\r\nimport logo from '../images/ig-logo.png';\r\nimport imageHolder from '../images/post-holder.png';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [caption, setCaption] = useState('');\r\n  const [image, setImage] = useState(imageHolder);\r\n\r\n  const { loading, error, post } = useSelector((state) => state.createPost);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(createPost({ image, caption }));\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const selected = e.target.files[0];\r\n    setImage(image);\r\n\r\n    if (selected) {\r\n      let reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(selected);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='form-container'>\r\n        <div className='form-header'>\r\n          <img src={logo} alt='logo' />\r\n        </div>\r\n        <form onSubmit={handleSubmit} className='register-form'>\r\n          <div className='image-holder'>\r\n            <img src={image} />\r\n            <input onChange={handleInput} type='file' />\r\n          </div>\r\n          <textarea\r\n            onChange={(e) => setCaption(e.target.value)}\r\n            placeholder='Enter caption'\r\n            rows='3'\r\n            maxLength='300'\r\n            type='text'\r\n            style={{\r\n              width: '100%',\r\n              border: '1px solid #efefef',\r\n              resize: 'none',\r\n              fontFamily: 'Segoe UI',\r\n              fontSize: '14px',\r\n              padding: '5px 8px',\r\n              outline: 'none',\r\n              wordBreak: 'break-word',\r\n            }}\r\n          />\r\n          <div>\r\n            {error ? <p>{error}</p> : null}\r\n            <button type='submit' className='form-button'>\r\n              {loading ? 'Submitting...' : 'Submit'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n",{"ruleId":"90","severity":1,"message":"91","line":85,"column":21,"nodeType":"92","endLine":93,"endColumn":23},{"ruleId":"93","severity":1,"message":"94","line":9,"column":20,"nodeType":"95","messageId":"96","endLine":9,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":35,"column":15,"nodeType":"92","endLine":35,"endColumn":75},{"ruleId":"93","severity":1,"message":"94","line":13,"column":20,"nodeType":"95","messageId":"96","endLine":13,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":9,"column":20,"nodeType":"95","messageId":"96","endLine":9,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":45,"column":6,"nodeType":"101","endLine":45,"endColumn":27,"suggestions":"102"},{"ruleId":"90","severity":1,"message":"91","line":57,"column":13,"nodeType":"92","endLine":57,"endColumn":62},{"ruleId":"93","severity":1,"message":"103","line":13,"column":27,"nodeType":"95","messageId":"96","endLine":13,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":42,"column":13,"nodeType":"92","endLine":42,"endColumn":32},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'post' is assigned a value but never used.",{"desc":"105","fix":"106"},"Update the dependencies array to be: [dispatch, user, user.name]",{"range":"107","text":"108"},[1221,1242],"[dispatch, user, user.name]"]